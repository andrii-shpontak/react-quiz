{"version":3,"file":"static/js/770.363ebb8f.chunk.js","mappings":"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","sources":["pages/Quiz/components/QuizResultsModal.tsx","pages/Quiz/components/TimeRemaining.tsx","pages/Quiz/hooks/useQuestionHandlers.ts","shared/helpers/timeHelpers.ts","pages/Quiz/components/QuestionCard.tsx","pages/Quiz/components/QuizPreview.tsx","pages/Quiz/components/QuizInProcess.tsx","pages/Quiz/view/Quiz.tsx","services/localStorageService.ts","shared/constants/LocalStorageKeys.ts","shared/constants/RequestState.ts","shared/helpers/getQuizResultData.ts","shared/helpers/randomDelay.ts","shared/hooks/useCountdown.ts","shared/hooks/useGetQuizByTitle.ts","shared/data/quizzes.ts","shared/hooks/useQuizzesData.ts"],"sourcesContent":["import { AbsoluteRoutes } from '../../../shared/constants/AbsoluteRoutes';\nimport type { TAnswersObject } from '../../../shared/types';\nimport { getQuizResultData } from '../../../shared/helpers/getQuizResultData';\nimport { useNavigate } from 'react-router-dom';\n\nconst QuizResultsModal = ({ endResult }: { endResult: TAnswersObject }) => {\n  const { percentageColor, percentage, correctOfAll, elapsedTime } = getQuizResultData(endResult);\n  const navigate = useNavigate();\n\n  const handleClose = () => {\n    navigate(AbsoluteRoutes.HOME);\n  };\n\n  return (\n    <div className='fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50'>\n      <div className='bg-white p-6 rounded-lg shadow-md w-full max-w-md'>\n        <h3 className='text-xl font-bold mb-4'>Quiz Results</h3>\n        <p className={`text-2xl font-bold mb-4 ${percentageColor}`}>Percentage: {percentage}%</p>\n        <p className='text-xl mb-4'>Correct Answers: {correctOfAll}</p>\n        <p className='text-xl mb-4'>Time Taken: {elapsedTime} seconds</p>\n        <button onClick={handleClose} className='bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600'>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizResultsModal;\n","import type { TTimeRemainingProps } from '../../../shared/types';\nimport { useCountdown } from '../../../shared/hooks/useCountdown';\n\n// need to process a case in which the time has already run out and the quiz has not yet been completed\n\nconst TimeRemaining = ({ timeLimit, isFinished }: TTimeRemainingProps) => {\n  const { minutesLeft, secondsLeft } = useCountdown(timeLimit, isFinished);\n\n  return (\n    <div className='flex justify-center items-center mt-4'>\n      <div className={`text-${isFinished ? 'green' : 'red'}-500 font-bold mb-4 text-2xl`}>\n        Time remaining: {minutesLeft}:{secondsLeft < 10 ? `0${secondsLeft}` : secondsLeft}\n      </div>\n    </div>\n  );\n};\n\nexport default TimeRemaining;\n","import type { TAnswer, TAnswersObject, TQuestionCardHandlersProps } from '../../../shared/types';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { LocalStorageKeys } from '../../../shared/constants/LocalStorageKeys';\nimport { LocalStorageService } from '../../../services/localStorageService';\nimport { getElapsedTime } from '../../../shared/helpers/timeHelpers';\n\nexport function useQuestionHandlers({\n  question,\n  questionNumber,\n  totalQuestions,\n  onNext,\n  quizTitle,\n}: TQuestionCardHandlersProps) {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(false);\n  const [isCorrect, setIsCorrect] = useState<boolean>(false);\n  const [answers, setAnswers] = useState<TAnswer[]>([]);\n  const [startTime, setStartTime] = useState<Date | null>(null);\n  const [endTime, setEndTime] = useState<Date | null>(null);\n  const [endResult, setResult] = useState<TAnswersObject | null>(null);\n\n  const handleOptionChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      if (!isConfirmed && !!value) {\n        setSelectedOption(Number(value));\n      }\n    },\n    [setSelectedOption, isConfirmed],\n  );\n\n  const handleConfirm = useCallback(() => {\n    if (selectedOption !== null) {\n      const correct = question.correct_answers.includes(selectedOption);\n      setIsCorrect(correct);\n      setIsConfirmed(true);\n      setAnswers(state => [...state, { questionId: questionNumber, answerId: selectedOption, correct }]);\n      if (questionNumber === totalQuestions) {\n        setEndTime(new Date());\n      }\n    }\n  }, [setIsConfirmed, setIsCorrect, question, selectedOption, setAnswers, questionNumber, setEndTime, totalQuestions]);\n\n  const handleNextClick = useCallback(() => {\n    if (questionNumber === totalQuestions && !!startTime && !!endTime) {\n      const currentDate = new Date().toISOString().split('.')[0];\n      const elapsedTime = getElapsedTime(startTime, endTime);\n      const storedAnswers = LocalStorageService.getItem(LocalStorageKeys.Answers);\n      const existingAnswers = storedAnswers ? (JSON.parse(storedAnswers) as TAnswersObject[]) : [];\n      const currentQuizObj = { title: quizTitle, date: currentDate, elapsedTime, answers };\n      setResult(currentQuizObj);\n      const allAnswers = [...existingAnswers, currentQuizObj];\n      LocalStorageService.setItem(LocalStorageKeys.Answers, JSON.stringify(allAnswers));\n      return;\n    }\n    onNext();\n    setSelectedOption(null);\n    setIsConfirmed(false);\n    setIsCorrect(false);\n  }, [answers, questionNumber, totalQuestions, onNext, quizTitle, endTime, startTime]);\n\n  useEffect(() => {\n    if (!startTime) {\n      setStartTime(new Date());\n    }\n  }, [startTime]);\n\n  return {\n    isConfirmed,\n    isCorrect,\n    selectedOption,\n    handleOptionChange,\n    handleConfirm,\n    handleNextClick,\n    isFinished: !!endTime,\n    endResult,\n  };\n}\n","export function getElapsedTime(startTime: Date, endTime: Date): string {\n  const elapsedTimeInSeconds = startTime && endTime ? (endTime.getTime() - startTime.getTime()) / 1000 : 0;\n  const elapsedMinutes = Math.floor(elapsedTimeInSeconds / 60);\n  const elapsedSeconds = Math.floor(elapsedTimeInSeconds % 60);\n  return `${elapsedMinutes}:${elapsedSeconds < 10 ? '0' + elapsedSeconds : elapsedSeconds}`;\n}\n","import QuizResultsModal from './QuizResultsModal';\nimport React from 'react';\nimport type { TQuestionCardProps } from '../../../shared/types';\nimport TimeRemaining from './TimeRemaining';\nimport { useQuestionHandlers } from '../hooks/useQuestionHandlers';\n\nconst QuestionCard: React.FC<TQuestionCardProps> = ({\n  question,\n  questionNumber,\n  totalQuestions,\n  onNext,\n  quizTitle,\n  timeLimit,\n}) => {\n  const {\n    isConfirmed,\n    isCorrect,\n    selectedOption,\n    handleOptionChange,\n    handleConfirm,\n    handleNextClick,\n    isFinished,\n    endResult,\n  } = useQuestionHandlers({ question, questionNumber, totalQuestions, onNext, quizTitle });\n\n  return (\n    <>\n      <TimeRemaining timeLimit={timeLimit} isFinished={isFinished} />\n      <div\n        className={`p-6 rounded-lg shadow-md border w-full max-w-xl mx-auto ${\n          isConfirmed ? (isCorrect ? 'bg-green-100' : 'bg-red-100') : 'bg-white'\n        } mb-6`}>\n        <h3 className='text-xl font-bold mb-4'>\n          Question {questionNumber} of {totalQuestions}\n        </h3>\n        <p className='text-gray-800 mb-4'>{question.text}</p>\n        <ul>\n          {question.options.map(option => (\n            <li key={option.id} className='mb-2'>\n              <label className='flex items-center cursor-pointer w-full'>\n                <span\n                  className={`inline-block flex items-center p-2 border rounded-lg shadow-sm transition-colors ${\n                    selectedOption === option.id ? 'bg-gray-300' : 'bg-gray-100'\n                  } ${\n                    isConfirmed ? (selectedOption === option.id ? (isCorrect ? 'bg-green-100' : 'bg-red-100') : '') : ''\n                  } hover:bg-gray-200 w-full`}\n                  style={{ pointerEvents: isConfirmed ? 'none' : 'auto' }}>\n                  <input\n                    type='radio'\n                    name={`question-${question.id}`}\n                    value={option.id}\n                    checked={selectedOption === option.id}\n                    onChange={handleOptionChange}\n                    disabled={isConfirmed}\n                    className='mx-3'\n                  />\n                  {option.text}\n                </span>\n              </label>\n            </li>\n          ))}\n        </ul>\n        {!isConfirmed ? (\n          <button onClick={handleConfirm} className='bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 mt-4'>\n            Confirm\n          </button>\n        ) : (\n          <button onClick={handleNextClick} className='bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 mt-4'>\n            {questionNumber === totalQuestions ? 'Finish' : 'Next'}\n          </button>\n        )}\n      </div>\n\n      {!!endResult && <QuizResultsModal endResult={endResult} />}\n    </>\n  );\n};\n\nexport default QuestionCard;\n","import type { TQuizPreviewProps } from '../../../shared/types';\n\nconst QuizPreview = ({ quizInfo, startQuiz }: TQuizPreviewProps) => {\n  const { title, category, difficulty, timeLimit } = quizInfo;\n\n  return (\n    <div className='flex justify-center items-center mt-10'>\n      <div className='bg-white p-6 rounded-lg shadow-md border border-gray-200 w-96'>\n        <h2 className='text-2xl font-bold mb-4'>{title}</h2>\n        <p className='text-gray-700 mb-2'>Category: {category}</p>\n        <p className='text-gray-700 mb-2'>Difficulty: {difficulty}</p>\n        <p className='text-gray-700 mb-4'>Time limit: {timeLimit} minutes</p>\n        <button onClick={startQuiz} className='bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600'>\n          Start Quiz\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPreview;\n","import { useCallback, useMemo, useState } from 'react';\n\nimport QuestionCard from './QuestionCard';\nimport QuizPreview from './QuizPreview';\nimport type { TQuizInProcessProps } from '../../../shared/types';\n\nconst QuizInProcess = ({ quizInfo }: TQuizInProcessProps) => {\n  const [quizStatus, setQuizStatus] = useState({ inProcess: 0 });\n\n  const onNext = useCallback(() => {\n    setQuizStatus(state => {\n      return { inProcess: state.inProcess + 1 };\n    });\n  }, [setQuizStatus]);\n\n  const currentQuestion = useMemo(\n    () => quizInfo.questions.find(question => question.id === quizStatus.inProcess),\n    [quizInfo, quizStatus.inProcess],\n  );\n\n  return (\n    <>\n      {!!quizStatus.inProcess && !!currentQuestion ? (\n        <>\n          <QuestionCard\n            question={currentQuestion}\n            onNext={onNext}\n            questionNumber={quizStatus.inProcess}\n            totalQuestions={quizInfo.questions.length}\n            quizTitle={quizInfo.title}\n            timeLimit={quizInfo.timeLimit}\n          />\n        </>\n      ) : (\n        <QuizPreview quizInfo={quizInfo} startQuiz={onNext} />\n      )}\n    </>\n  );\n};\n\nexport default QuizInProcess;\n","import { Header, Loader } from '../../../shared/components';\n\nimport { QuizInProcess } from '../components';\nimport React from 'react';\nimport { RequestState } from '../../../shared/constants/RequestState';\nimport { useGetQuizByTitle } from '../../../shared/hooks/useGetQuizByTitle';\nimport { useParams } from 'react-router-dom';\nimport { useQuizzesData } from '../../../shared/hooks/useQuizzesData';\n\nconst Quiz: React.FC = () => {\n  const { id } = useParams();\n  const { quizzesData, requestStatus } = useQuizzesData({});\n  const { currentQuiz } = useGetQuizByTitle({ id, data: quizzesData });\n\n  return (\n    <>\n      <Header title={!!id ? `Quiz #${id}` : ''} />\n      {requestStatus === RequestState.Pending && <Loader />}\n      {!!currentQuiz && <QuizInProcess quizInfo={currentQuiz} />}\n    </>\n  );\n};\n\nexport default Quiz;\n","import { LocalStorageKeys } from '../shared/constants/LocalStorageKeys';\n\nexport class LocalStorageService {\n  public static setItem<T>(key: LocalStorageKeys, value: T): void {\n    return localStorage.setItem(key, convertDataForSaveStorage(value));\n  }\n\n  public static getItem(key: LocalStorageKeys): string | null {\n    return localStorage.getItem(key);\n  }\n\n  public static removeItem(key: LocalStorageKeys): void {\n    localStorage.removeItem(key);\n  }\n\n  public static clear(): void {\n    localStorage.clear();\n  }\n}\n\nfunction convertDataForSaveStorage<T>(value: T): string {\n  if (value === null && value === undefined) {\n    return '';\n  } else if (typeof value === 'string') {\n    return value;\n  } else {\n    return JSON.stringify(value);\n  }\n}\n","export enum LocalStorageKeys {\n  Answers = 'answers',\n  Quizzes = 'quizzes',\n  HiddenQuizzes = 'hidden-quizzes',\n}\n","export enum RequestState {\n  Idle = 'Idle',\n  Pending = 'Pending',\n  Success = 'Success',\n  Error = 'Error',\n}\n","import type { TAnswersObject, TGetQuizResultInfo } from '../types';\n\nexport function getQuizResultData(savedQuizObject: TAnswersObject): TGetQuizResultInfo {\n  const { elapsedTime, answers } = savedQuizObject;\n  let correctAnswers = 0;\n\n  for (let i = 0; i < answers.length; i++) {\n    answers[i].correct && correctAnswers++;\n  }\n\n  const percentage = Math.round((correctAnswers / answers.length) * 100);\n\n  const correctOfAll = `${correctAnswers} / ${answers.length}`;\n\n  let percentageColor = '';\n\n  switch (true) {\n    case percentage >= 70:\n      percentageColor = 'text-green-500';\n      break;\n    case percentage > 50:\n      percentageColor = 'text-orange-500';\n      break;\n    default:\n      percentageColor = 'text-red-500';\n      break;\n  }\n\n  return { percentageColor, percentage, correctOfAll, elapsedTime };\n}\n","function getRandomDelay(minDelay: number, maxDelay: number): number {\n  return Math.floor(Math.random() * (maxDelay - minDelay + 1)) + minDelay;\n}\n\nexport const requestDelay = getRandomDelay(500, 1000);\n","import { useEffect, useState } from 'react';\n\nexport function useCountdown(minutes: number, isFinished: boolean) {\n  const [timeLeft, setTimeLeft] = useState(minutes * 60);\n\n  useEffect(() => {\n    if (timeLeft <= 0 || isFinished) return;\n\n    const intervalId = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [timeLeft, isFinished]);\n\n  const minutesLeft = Math.floor(timeLeft / 60);\n  const secondsLeft = timeLeft % 60;\n\n  return { minutesLeft, secondsLeft };\n}\n","import type { TQuiz, TQuizUseDataProps } from '../types';\nimport { useEffect, useState } from 'react';\n\nexport function useGetQuizByTitle({ id, data }: TQuizUseDataProps) {\n  const [currentQuiz, setCurrentQuiz] = useState<TQuiz | null>(null);\n\n  useEffect(() => {\n    if (id && data && data.length > 0) {\n      const quiz = data.find(quiz => quiz.title === id);\n      !!quiz ? setCurrentQuiz(quiz) : console.error(`Quiz with id ${id} not found.`);\n    }\n  }, [data, id]);\n\n  return { currentQuiz };\n}\n","import type { TQuiz } from '../types';\n\nexport const quizzes: TQuiz[] = [\n  {\n    title: 'React & TS',\n    timeLimit: 25,\n    difficulty: 'simple',\n    category: 'Frontend',\n    custom: false,\n    questions: [\n      {\n        id: 1,\n        text: 'What is TypeScript?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A superset of JavaScript',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A library for React',\n          },\n          {\n            id: 4,\n            text: 'An IDE for web development',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 2,\n        text: 'What is React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A JavaScript library for building user interfaces',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A database management system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 3,\n        text: 'What are hooks in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'Functions that let you use React features in functional components',\n          },\n          {\n            id: 2,\n            text: 'CSS classes for styling components',\n          },\n          {\n            id: 3,\n            text: 'Event listeners for handling user interactions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 4,\n        text: 'What is the purpose of JSX in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To write HTML elements in JavaScript and render them in the DOM',\n          },\n          {\n            id: 2,\n            text: 'To style components using CSS',\n          },\n          {\n            id: 3,\n            text: 'To define routes for navigation',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 5,\n        text: \"What is the output of the following code?\\n\\njavascript\\nconst name = 'John';\\nconst greeting = `Hello, ${name}`;\\nconsole.log(greeting);\\n\",\n\n        options: [\n          {\n            id: 1,\n            text: 'Hello, John',\n          },\n          {\n            id: 2,\n            text: 'Hello, ${name}',\n          },\n          {\n            id: 3,\n            text: 'undefined',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 6,\n        text: 'What does the useEffect hook do in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'It allows you to perform side effects in function components',\n          },\n          {\n            id: 2,\n            text: 'It handles form submissions',\n          },\n          {\n            id: 3,\n            text: 'It creates custom hooks',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 7,\n        text: 'What is the purpose of the useState hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To add state to functional components',\n          },\n          {\n            id: 2,\n            text: 'To fetch data from an API',\n          },\n          {\n            id: 3,\n            text: 'To handle routing in React applications',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 8,\n        text: 'What is the correct way to import a named export in React?',\n\n        options: [\n          {\n            id: 1,\n            text: \"import { ComponentName } from 'module'\",\n          },\n          {\n            id: 2,\n            text: \"import * as ComponentName from 'module'\",\n          },\n          {\n            id: 3,\n            text: \"import ComponentName from 'module'\",\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 9,\n        text: 'What is the purpose of props in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To pass data from parent to child components',\n          },\n          {\n            id: 2,\n            text: 'To define CSS styles for components',\n          },\n          {\n            id: 3,\n            text: 'To handle form submissions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 10,\n        text: 'What is the output of the following code?\\n\\n```javascript\\nconst numbers = [1, 2, 3];\\nconst doubled = numbers.map(num => num * 2);\\nconsole.log(doubled);\\n```',\n\n        options: [\n          {\n            id: 1,\n            text: '[1, 2, 3]',\n          },\n          {\n            id: 2,\n            text: '[2, 4, 6]',\n          },\n          {\n            id: 3,\n            text: '[2, 3, 4]',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 11,\n        text: 'Which hook is used to perform data fetching in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'useFetch',\n          },\n          {\n            id: 2,\n            text: 'useEffect',\n          },\n          {\n            id: 3,\n            text: 'useAPI',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 12,\n        text: 'What is the purpose of the useCallback hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To create memoized functions',\n          },\n          {\n            id: 2,\n            text: 'To handle form submissions',\n          },\n          {\n            id: 3,\n            text: 'To manage state in functional components',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 13,\n        text: 'What is JSX in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A syntax extension for JavaScript',\n          },\n          {\n            id: 2,\n            text: 'A new programming language',\n          },\n          {\n            id: 3,\n            text: 'A build tool',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 14,\n        text: 'What does the useMemo hook do in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'It allows you to perform side effects in function components',\n          },\n          {\n            id: 2,\n            text: 'It memoizes the result of a function',\n          },\n          {\n            id: 3,\n            text: 'It creates custom hooks',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 15,\n        text: 'Which of the following is NOT a valid way to define state in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'Using the useState hook',\n          },\n          {\n            id: 2,\n            text: \"Using a class component's state property\",\n          },\n          {\n            id: 3,\n            text: 'Using the useContext hook',\n          },\n        ],\n        correct_answers: [3],\n      },\n      {\n        id: 16,\n        text: 'What is the purpose of the useRef hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To interact with the DOM',\n          },\n          {\n            id: 2,\n            text: 'To manage state in functional components',\n          },\n          {\n            id: 3,\n            text: 'To create memoized functions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 17,\n        text: 'What does the useContext hook do in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'It allows you to use context in functional components',\n          },\n          {\n            id: 2,\n            text: 'It allows you to perform side effects in function components',\n          },\n          {\n            id: 3,\n            text: 'It memoizes the result of a function',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 18,\n        text: 'What is the purpose of the useReducer hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To manage state in functional components',\n          },\n          {\n            id: 2,\n            text: 'To perform data fetching',\n          },\n          {\n            id: 3,\n            text: 'To create memoized functions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 19,\n        text: 'What is the purpose of the useEffect hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To create memoized functions',\n          },\n          {\n            id: 2,\n            text: 'To perform side effects in function components',\n          },\n          {\n            id: 3,\n            text: 'To manage state in functional components',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 20,\n        text: 'What is the purpose of the useMemo hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To create memoized functions',\n          },\n          {\n            id: 2,\n            text: 'To memoize the result of a function',\n          },\n          {\n            id: 3,\n            text: 'To manage state in functional components',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 21,\n        text: 'What does JSX stand for?',\n\n        options: [\n          {\n            id: 1,\n            text: 'JavaScript XML',\n          },\n          {\n            id: 2,\n            text: 'JavaScript Extensible',\n          },\n          {\n            id: 3,\n            text: 'Java Standard Extension',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 22,\n        text: 'What is the purpose of the useCallback hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To interact with the DOM',\n          },\n          {\n            id: 2,\n            text: 'To manage state in functional components',\n          },\n          {\n            id: 3,\n            text: 'To create memoized functions',\n          },\n        ],\n        correct_answers: [3],\n      },\n      {\n        id: 23,\n        text: 'What is the purpose of the useLayoutEffect hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To perform data fetching',\n          },\n          {\n            id: 2,\n            text: 'To interact with the DOM',\n          },\n          {\n            id: 3,\n            text: 'To manage state in functional components',\n          },\n        ],\n        correct_answers: [2],\n      },\n      {\n        id: 24,\n        text: 'What is the purpose of the useRef hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To interact with the DOM',\n          },\n          {\n            id: 2,\n            text: 'To manage state in functional components',\n          },\n          {\n            id: 3,\n            text: 'To create memoized functions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 25,\n        text: 'What is the purpose of the useReducer hook in React?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To manage state in functional components',\n          },\n          {\n            id: 2,\n            text: 'To perform data fetching',\n          },\n          {\n            id: 3,\n            text: 'To create memoized functions',\n          },\n        ],\n        correct_answers: [1],\n      },\n    ],\n  },\n  {\n    title: 'Docker & docker-compose',\n    timeLimit: 25,\n    difficulty: 'medium',\n    category: 'Devops',\n    custom: false,\n    questions: [\n      {\n        id: 1,\n        text: 'What is Docker?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A containerization platform',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 2,\n        text: 'What is Docker Compose?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A tool for defining and running multi-container Docker applications',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 3,\n        text: 'What is a Docker image?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A lightweight, standalone, executable package that includes everything needed to run a piece of software, including the code, a runtime, libraries, environment variables, and config files',\n          },\n          {\n            id: 2,\n            text: 'A file system snapshot',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 4,\n        text: 'What is a Docker container?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A runtime instance of a Docker image',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 5,\n        text: 'What is the purpose of a Dockerfile?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To define the contents and configuration of a Docker image',\n          },\n          {\n            id: 2,\n            text: 'To define routes for navigation',\n          },\n          {\n            id: 3,\n            text: 'To handle form submissions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 6,\n        text: 'What is the difference between a Docker image and a Docker container?',\n\n        options: [\n          {\n            id: 1,\n            text: 'An image is a template for containers, while a container is a running instance of an image',\n          },\n          {\n            id: 2,\n            text: 'There is no difference',\n          },\n          {\n            id: 3,\n            text: 'An image contains the application code, while a container contains the runtime environment',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 7,\n        text: 'What is Docker Hub?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A cloud-based registry service for sharing and storing Docker images',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 8,\n        text: 'What is Docker Swarm?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A clustering and orchestration tool for Docker containers',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 9,\n        text: 'What is Docker Compose used for?',\n\n        options: [\n          {\n            id: 1,\n            text: 'Defining and running multi-container Docker applications',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 10,\n        text: 'What is the difference between Docker and virtual machines (VMs)?',\n\n        options: [\n          {\n            id: 1,\n            text: 'Docker containers share the host OS kernel, while VMs each have their own OS kernel',\n          },\n          {\n            id: 2,\n            text: 'There is no difference',\n          },\n          {\n            id: 3,\n            text: 'Docker containers are heavier and slower than VMs',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 11,\n        text: 'What is Docker volume?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A mechanism for persisting data generated by and used by Docker containers',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 12,\n        text: 'What is Docker network?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A communication bridge between containers, allowing them to communicate with each other',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 13,\n        text: 'What is Dockerfile?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A text document that contains all the commands a user could call on the command line to assemble an image',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 14,\n        text: 'What is Docker image registry?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A storage location where Docker images can be stored and retrieved',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 15,\n        text: 'What is Docker Swarm?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A clustering and orchestration tool for Docker containers',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 16,\n        text: 'What is Docker Compose file?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A YAML file that defines how Docker containers should behave in production',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 17,\n        text: 'What is the purpose of Docker Compose?',\n\n        options: [\n          {\n            id: 1,\n            text: 'Defining and running multi-container Docker applications',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 18,\n        text: 'What is the Docker command to build an image from a Dockerfile?',\n\n        options: [\n          {\n            id: 1,\n            text: 'docker build',\n          },\n          {\n            id: 2,\n            text: 'docker run',\n          },\n          {\n            id: 3,\n            text: 'docker compose',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 19,\n        text: 'What is the Docker command to run a container?',\n\n        options: [\n          {\n            id: 1,\n            text: 'docker run',\n          },\n          {\n            id: 2,\n            text: 'docker build',\n          },\n          {\n            id: 3,\n            text: 'docker compose',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 20,\n        text: \"What is the purpose of the 'docker-compose up' command?\",\n\n        options: [\n          {\n            id: 1,\n            text: 'To start all the services defined in a Docker Compose file',\n          },\n          {\n            id: 2,\n            text: 'To stop all the services defined in a Docker Compose file',\n          },\n          {\n            id: 3,\n            text: 'To build Docker images',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 21,\n        text: \"What is the purpose of the 'docker-compose down' command?\",\n\n        options: [\n          {\n            id: 1,\n            text: 'To stop and remove the containers, networks, and volumes defined in a Docker Compose file',\n          },\n          {\n            id: 2,\n            text: 'To start all the services defined in a Docker Compose file',\n          },\n          {\n            id: 3,\n            text: 'To build Docker images',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 22,\n        text: 'What is the purpose of Docker Compose volumes?',\n\n        options: [\n          {\n            id: 1,\n            text: 'To persist data generated by and used by Docker containers',\n          },\n          {\n            id: 2,\n            text: 'To define CSS styles for components',\n          },\n          {\n            id: 3,\n            text: 'To handle form submissions',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 23,\n        text: 'What is Docker Compose network?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A communication bridge between containers, allowing them to communicate with each other',\n          },\n          {\n            id: 2,\n            text: 'A programming language',\n          },\n          {\n            id: 3,\n            text: 'A version control system',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 24,\n        text: 'What is Docker Compose service?',\n\n        options: [\n          {\n            id: 1,\n            text: 'A containerized application',\n          },\n          {\n            id: 2,\n            text: 'A version control system',\n          },\n          {\n            id: 3,\n            text: 'A programming language',\n          },\n        ],\n        correct_answers: [1],\n      },\n      {\n        id: 25,\n        text: 'What is the Docker Compose command to scale a service?',\n\n        options: [\n          {\n            id: 1,\n            text: 'docker-compose scale',\n          },\n          {\n            id: 2,\n            text: 'docker-compose up',\n          },\n          {\n            id: 3,\n            text: 'docker-compose run',\n          },\n        ],\n        correct_answers: [1],\n      },\n    ],\n  },\n];\n","import type { TQuiz, TUseQuizzesDataProps } from '../types';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { LocalStorageKeys } from '../constants/LocalStorageKeys';\nimport { LocalStorageService } from '../../services/localStorageService';\nimport { RequestState } from '../constants/RequestState';\nimport { quizzes } from '../data/quizzes';\nimport { requestDelay } from '../helpers/randomDelay';\n\nexport function useQuizzesData({ id }: TUseQuizzesDataProps) {\n  const [quizzesData, setQuizzes] = useState<TQuiz[]>([]);\n  const [requestStatus, setStatus] = useState<RequestState>(RequestState.Idle);\n\n  const getQuizzes = useCallback(async () => {\n    setStatus(RequestState.Pending);\n    try {\n      const response = await new Promise<TQuiz[]>(resolve => {\n        setTimeout(() => resolve(quizzes), requestDelay);\n      });\n\n      const storedQuizzes = LocalStorageService.getItem(LocalStorageKeys.Quizzes);\n      const customQuizzes = storedQuizzes ? (JSON.parse(storedQuizzes) as TQuiz[]) : [];\n\n      const hiddenQuizzesInStorage = LocalStorageService.getItem(LocalStorageKeys.HiddenQuizzes);\n      const hiddenQuizzes = hiddenQuizzesInStorage ? (JSON.parse(hiddenQuizzesInStorage) as string[]) : [];\n\n      const filteredResponse = response.filter(quiz => !hiddenQuizzes.includes(quiz.title));\n\n      setQuizzes([...filteredResponse, ...customQuizzes]);\n      setStatus(RequestState.Success);\n    } catch (error) {\n      console.error('Failed to fetch quizzes:', error);\n      setStatus(RequestState.Error);\n    }\n  }, []);\n\n  useEffect(() => {\n    getQuizzes();\n    // only when mounting the component\n    // eslint-disable-next-line\n  }, []);\n\n  return { quizzesData, requestStatus };\n}\n"],"names":["_ref","endResult","percentageColor","percentage","correctOfAll","elapsedTime","getQuizResultData","navigate","useNavigate","_jsx","className","children","_jsxs","concat","onClick","handleClose","AbsoluteRoutes","HOME","timeLimit","isFinished","minutesLeft","secondsLeft","useCountdown","useQuestionHandlers","question","questionNumber","totalQuestions","onNext","quizTitle","selectedOption","setSelectedOption","useState","isConfirmed","setIsConfirmed","isCorrect","setIsCorrect","answers","setAnswers","startTime","setStartTime","endTime","setEndTime","setResult","handleOptionChange","useCallback","event","value","target","Number","handleConfirm","correct","correct_answers","includes","state","questionId","answerId","Date","handleNextClick","currentDate","toISOString","split","elapsedTimeInSeconds","getTime","elapsedMinutes","Math","floor","elapsedSeconds","getElapsedTime","storedAnswers","LocalStorageService","getItem","LocalStorageKeys","Answers","existingAnswers","JSON","parse","currentQuizObj","title","date","allAnswers","setItem","stringify","useEffect","_Fragment","TimeRemaining","text","options","map","option","id","style","pointerEvents","type","name","checked","onChange","disabled","QuizResultsModal","quizInfo","startQuiz","category","difficulty","quizStatus","setQuizStatus","inProcess","currentQuestion","useMemo","questions","find","QuestionCard","length","QuizPreview","Quiz","useParams","quizzesData","requestStatus","useQuizzesData","currentQuiz","useGetQuizByTitle","data","Header","RequestState","Pending","Loader","QuizInProcess","key","localStorage","undefined","convertDataForSaveStorage","removeItem","clear","savedQuizObject","correctAnswers","i","round","requestDelay","minDelay","maxDelay","random","minutes","timeLeft","setTimeLeft","intervalId","setInterval","prevTime","clearInterval","setCurrentQuiz","quiz","console","error","quizzes","custom","setQuizzes","setStatus","Idle","getQuizzes","async","response","Promise","resolve","setTimeout","storedQuizzes","Quizzes","customQuizzes","hiddenQuizzesInStorage","HiddenQuizzes","hiddenQuizzes","filteredResponse","filter","Success","Error"],"sourceRoot":""}